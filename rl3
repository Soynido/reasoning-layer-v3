#!/usr/bin/env node

/**
 * üß† Reasoning Shell (RL3) - Global Binary
 * 
 * Universal entry point for the Reasoning Layer V3 cognitive shell.
 * Can be invoked from any directory to start an intelligent terminal session.
 */

const path = require('path');
const fs = require('fs');

// Try to find the nearest .reasoning directory
function findReasoningRoot(startDir = process.cwd()) {
    let currentDir = startDir;
    
    while (currentDir !== '/') {
        const reasoningDir = path.join(currentDir, '.reasoning');
        if (fs.existsSync(reasoningDir)) {
            return currentDir;
        }
        currentDir = path.dirname(currentDir);
    }
    
    // Default to hardcoded path if not found
    return '/Users/valentingaludec/Reasoning Layer V3';
}

const workspaceRoot = findReasoningRoot();
const replPath = path.join(workspaceRoot, '.reasoning', 'repl.js');
const cliPath = path.join(workspaceRoot, '.reasoning', 'cli.js');

// Get arguments
const args = process.argv.slice(2);
const command = args[0];

// Determine which script to use
let scriptPath = replPath;

// If command is provided and not 'shell'/'chat'/'repl', use CLI
if (command && command !== 'shell' && command !== 'chat' && command !== 'repl') {
    scriptPath = cliPath;
}

// Fallback to CLI if REPL doesn't exist
if (!fs.existsSync(scriptPath)) {
    scriptPath = cliPath;
    if (!fs.existsSync(scriptPath)) {
        console.error(`‚ùå Cannot find Reasoning Layer at: ${workspaceRoot}/.reasoning/`);
        console.error(`   Run "node .reasoning/cli.js bootstrap" to initialize.`);
        process.exit(1);
    }
}

// Change to workspace directory
process.chdir(workspaceRoot);

// If using REPL, no args needed (it's fully interactive)
if (scriptPath === replPath) {
    process.argv = [process.argv[0], process.argv[1]];
} else {
    // For CLI, pass all args (or default to 'chat')
    if (args.length === 0) {
        process.argv = [process.argv[0], process.argv[1], 'chat'];
    } else {
        process.argv = [process.argv[0], process.argv[1], ...args];
    }
}

// Load and execute the script
require(scriptPath);

